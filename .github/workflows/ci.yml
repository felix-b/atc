name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build-linux:
    runs-on: ubuntu-latest
    steps:

      - name: print environment
        run: |
          uname -a
          gcc --version
          cmake --version
          echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"

      - name: install deps
        run: |
          sudo sed -i -e 's/http:\/\/archive.ubuntu.com\/ubuntu\//mirror:\/\/mirrors.ubuntu.com\/mirrors.txt/' /etc/apt/sources.list && sudo apt-get update
          sudo apt-get install -y --no-install-recommends freeglut3-dev

      - name: checkout
        uses: actions/checkout@v2
        with: 
          submodules: 'recursive'

      - name: build all
        run: |
          cd ${GITHUB_WORKSPACE}/tasks
          ls -la
          chmod +x build-all.sh
          ./build-all.sh

      - name: upload lin.xpl
        uses: actions/upload-artifact@v2
        with:
          name: lin_xpl
          path: build/lib/lin.xpl

      - name: upload plugin assets
        uses: actions/upload-artifact@v2
        with:
          name: plugin_assets
          path: assets

  build-mac:
    runs-on: macos-latest
    steps:

      - name: print environment
        run: |
          uname -a
          gcc --version
          cmake --version
          echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"

      - name: checkout
        uses: actions/checkout@v2
        with: 
          submodules: 'recursive'

      - name: build all
        run: |
          cd ${GITHUB_WORKSPACE}/tasks
          ls -la
          chmod +x build-all.sh
          ./build-all.sh

      - name: upload mac.xpl
        uses: actions/upload-artifact@v2
        with:
          name: mac_xpl
          path: build/bin/mac.xpl

  build-windows:
    runs-on: windows-latest
    steps:

      - name: print environment
        run: |
          echo "GITHUB_WORKSPACE=${env:GITHUB_WORKSPACE}"
          gcc --version
          cmake --version

      - name: checkout
        uses: actions/checkout@v2
        with: 
          submodules: 'recursive'

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        
      - name: build all
        run: tasks\build-all.cmd

      - name: upload win.xpl
        uses: actions/upload-artifact@v2
        with:
          name: win_xpl
          path: |
            build\lib\win.xpl
            libs\libspeechwin\build\Release\libspeechwin.dll
            tasks\redist\win\libgcc_s_seh-1.dll
            tasks\redist\win\libstdc++-6.dll
            tasks\redist\win\libwinpthread-1.dll

  create-download-zip:
    needs: [build-linux, build-mac, build-windows]
    runs-on: ubuntu-latest
    steps:

      - name: download artifacts
        uses: actions/download-artifact@v2

      - name: print structure of downloaded files
        run: ls -R

      - name: create version.txt
        id: create_version_txt
        run: |
          echo "build # $GH_RUN_NUMBER" > plugin_assets/version.txt 
          echo "commit $GH_COMMIT_SHA" >> plugin_assets/version.txt
          echo "to $GH_REF" >> plugin_assets/version.txt
          if ["$GH_REF" != "refs/heads/master"]; then
            echo "*** this is a pull request build! ***" >> plugin_assets/version.txt
          fi
          echo $(date) >> plugin_assets/version.txt
        env:
          GH_RUN_NUMBER: ${{ github.run_number }}
          GH_COMMIT_SHA: ${{ github.sha }}
          GH_EVENT_NAME: ${{ github.event_name }}
          GH_REF: ${{ github.ref }}
          GH_HEAD_REF: ${{ github.head_ref }}

      - name: create plugin zip
        run: |
          mkdir plugin_assets/64
          cp lin_xpl/lin.xpl plugin_assets/64/
          cp mac_xpl/mac.xpl plugin_assets/64/
          cp win_xpl/build/lib/win.xpl plugin_assets/64/
          cp win_xpl/libs/libspeechwin/build/Release/libspeechwin.dll plugin_assets/64/
          cp win_xpl/tasks/redist/win/libgcc_s_seh-1.dll plugin_assets/64/
          cp win_xpl/tasks/redist/win/libstdc++-6.dll plugin_assets/64/
          cp win_xpl/tasks/redist/win/libwinpthread-1.dll plugin_assets/64/
          mv plugin_assets airTrafficAndControl

      - name: upload plugin zip
        uses: actions/upload-artifact@v2
        with:
          name: airTrafficAndControl
          path: airTrafficAndControl

  publish-bleeding-edge:
    needs: [create-download-zip]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: download artifacts
        uses: actions/download-artifact@v2
        with:
          name: airTrafficAndControl
          path: airTrafficAndControl

      - name: create zip
        id: create_zip
        run: |
          export ZIP_NAME=airTrafficAndControl.build${BUILD_NUMBER}.zip
          echo ZIP_NAME=$ZIP_NAME
          zip -r $ZIP_NAME airTrafficAndControl
          echo "::set-output name=zip_name::$ZIP_NAME"
        env:
          BUILD_NUMBER: ${{ github.run_number }}

      - name: recycle old release
        id: recycle_release
        uses: ./.github/actions/recycle-release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_base: bleeding-edge
          build_number: ${{ github.run_number }}
          release_notes: ${{ github.event.head_commit.message }}
          download_asset_name: ${{ steps.create_zip.outputs.zip_name }}

      - name: create new release
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.recycle_release.outputs.new_tag }}
          name: 'latest bleeding-edge build'
          allow_override: true
          commitish: master
          prerelease: true
          body: ${{ steps.recycle_release.outputs.new_release_body }}
          files: ${{ steps.create_zip.outputs.zip_name }}
          gzip: false
